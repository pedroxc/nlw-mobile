{"version":3,"sources":["src/assets/images/layoutTop.png","src/assets/images/layoutBot.png","src/assets/images/layout.png","src/services/api.js","src/services/requisicoes/usuarios.js","src/paginas/Principal/styles.js","src/paginas/Principal/estilos.js","src/paginas/Principal/index.js","src/paginas/Repositorios/estilos.js","src/services/requisicoes/repositorios.js","src/paginas/Repositorios/styles.js","src/paginas/Repositorios/index.js","src/paginas/CriarRepositorio/estilos.js","src/paginas/CriarRepositorio/index.js","src/paginas/InfoRepositorio/estilos.js","src/paginas/InfoRepositorio/index.js","src/rotas.js","src/styles/global.js","App.js"],"names":["module","exports","api","axios","create","baseURL","buscaUsuario","nomeUsuario","a","async","get","resultado","data","console","log","Layer","styled","img","TopLayout","BotLayout","estilos","StyleSheet","container","flex","backgroundColor","alignItems","marginBottom","maxHeight","maxWidth","marginLeft","layout","zIndex","position","botao","marginTop","padding","justifyContent","borderRadius","width","textoBotao","fontWeight","fontSize","color","entrada","borderWidth","borderColor","paddingHorizontal","height","imagemArea","imagem","fundo","textoNome","textoEmail","seguidoresArea","flexDirection","seguidores","margin","seguidoresNumero","seguidoresTexto","repositorios","Principal","navigation","useState","setNomeUsuario","usuario","setUsuario","ScrollView","View","style","src","topLayout","botLayout","login","Image","source","uri","avatar_url","Text","name","email","followers","following","TouchableOpacity","onPress","navigate","id","TextInput","placeholder","autoCapitalize","value","onChangeText","Alert","alert","repositoriosTexto","titulo","textAlign","repositorio","borderBottomWidth","borderBottomColor","paddingVertical","repositorioNome","repositorioData","pegarRepodoUser","salvarRepodoUser","postId","nome","put","criarRepo","post","deletarRepo","delete","div","BackButton","button","Repositorios","route","repo","setRepo","estaNatela","useIsFocused","useEffect","params","onClick","length","FlatList","keyExtractor","renderItem","item","updated_at","CriarRepositorio","setNome","setData","goBack","InfoRepositorio","Tab","createNativeStackNavigator","Rotas","NavigationContainer","Navigator","Screen","options","title","component","headerShown","createGlobalStyle","App"],"mappings":"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","file":"static/js/app.c0515295.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/layoutTop.323f05d4.png\";","module.exports = __webpack_public_path__ + \"static/media/layoutBot.9dbeff66.png\";","module.exports = __webpack_public_path__ + \"static/media/layout.d533b682.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.github.com\",\n});\nexport default api;\n","import api from \"../api\";\n\nexport async function buscaUsuario(nomeUsuario) {\n  try {\n    const resultado = await api.get(`/users/${nomeUsuario}`);\n    return resultado.data;\n  } catch (err) {\n    console.log(err);\n    return {};\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Layer = styled.img`\n  z-index: -1;\n  position: fixed;\n`;\nexport const TopLayout = styled.img`\n  z-index: 4;\n  position: fixed;\n`;\nexport const BotLayout = styled.img`\n  z-index: 4;\n  position: fixed;\n  top: 600px;\n`;\n","import { StyleSheet } from \"react-native\";\n\nconst estilos = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    maxHeight: 567,\n    maxWidth: 286,\n    marginLeft: \"35%\",\n  },\n  layout: { zIndex: 4, position: \"absolute\" },\n  botao: {\n    backgroundColor: \"#8A07DA\",\n    marginTop: 20,\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    width: \"90%\",\n  },\n  textoBotao: {\n    fontWeight: \"bold\",\n    fontSize: 16,\n    color: \"#fff\",\n    backgroundColor: \"#8A07DA\",\n  },\n  entrada: {\n    borderWidth: 2,\n    borderColor: \"#ddd\",\n    paddingHorizontal: 20,\n    fontSize: 16,\n    color: \"#444\",\n    marginTop: 40,\n    borderRadius: 8,\n    height: 44,\n    width: \"90%\",\n  },\n  imagemArea: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    marginTop: -75,\n    backgroundColor: \"#FFF\",\n  },\n  imagem: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n  },\n  fundo: {\n    backgroundColor: \"#C4C4C4\",\n    width: \"100%\",\n    height: 156,\n  },\n  textoNome: {\n    fontSize: 21,\n    fontWeight: \"600\",\n    color: \"#45565F\",\n    padding: 15,\n  },\n  textoEmail: {\n    fontSize: 17,\n    color: \"#717E84\",\n    marginTop: 5,\n  },\n  seguidoresArea: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n  },\n  seguidores: {\n    margin: 20,\n    alignItems: \"center\",\n  },\n  seguidoresNumero: {\n    color: \"#8A07DA\",\n    fontSize: 15,\n  },\n  seguidoresTexto: {\n    color: \"#95A8B2\",\n    fontSize: 13,\n    marginTop: 5,\n  },\n  repositorios: {\n    color: \"#8A07DA\",\n    fontSize: 15,\n    fontWeight: \"400\",\n  },\n});\n\nexport default estilos;\n","import React, { useState } from \"react\";\nimport { buscaUsuario } from \"../../services/requisicoes/usuarios\";\nimport {\n  Text,\n  View,\n  Image,\n  TouchableOpacity,\n  TextInput,\n  Alert,\n  ScrollView,\n} from \"react-native\";\nimport { TopLayout, BotLayout, Layer } from \"./styles\";\nimport estilos from \"./estilos\";\nimport topLayout from \"../../assets/images/layoutTop.png\";\nimport botLayout from \"../../assets/images/layoutBot.png\";\nimport layout from \"../../assets/images/layout.png\";\n\nexport default function Principal({ navigation }) {\n  const [nomeUsuario, setNomeUsuario] = useState(\"\");\n  const [usuario, setUsuario] = useState({});\n\n  async function busca() {\n    const resultado = await buscaUsuario(nomeUsuario);\n    if (resultado) {\n      setUsuario(resultado);\n    } else {\n      Alert.alert(\"Usuario não econtrado\");\n      setUsuario({});\n    }\n  }\n  return (\n    <ScrollView>\n      <View style={estilos.container}>\n        <TopLayout src={topLayout} />\n        <BotLayout src={botLayout} />\n        <Layer src={layout} />\n        <View style={{ marginTop: 40, alignItems: \"center\" }}>\n          {usuario?.login && (\n            <>\n              <View style={estilos.fundo} />\n              <View style={estilos.imagemArea}>\n                <Image\n                  source={{\n                    uri: usuario.avatar_url,\n                  }}\n                  style={estilos.imagem}\n                />\n              </View>\n              <Text style={estilos.textoNome}>{usuario.name}</Text>\n              <Text style={estilos.textoEmail}>{usuario.email}</Text>\n              <View style={estilos.seguidoresArea}>\n                <View style={estilos.seguidores}>\n                  <Text style={estilos.seguidoresNumero}>\n                    {usuario.followers}\n                  </Text>\n                  <Text style={estilos.seguidoresTexto}>Seguidores</Text>\n                </View>\n                <View style={estilos.seguidores}>\n                  <Text style={estilos.seguidoresNumero}>\n                    {usuario.following}\n                  </Text>\n                  <Text style={estilos.seguidoresTexto}>Seguindo</Text>\n                </View>\n              </View>\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate(\"Repositorios\", { id: usuario.login })\n                }\n              >\n                <Text style={estilos.repositorios}>Ver os repositórios</Text>\n              </TouchableOpacity>\n            </>\n          )}\n\n          <TextInput\n            placeholder=\"Busque por um usuário\"\n            autoCapitalize=\"\"\n            style={estilos.entrada}\n            value={nomeUsuario}\n            onChangeText={setNomeUsuario}\n          />\n\n          <TouchableOpacity style={estilos.botao} onPress={busca}>\n            <Text style={estilos.textoBotao}>Buscar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nconst estilos = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    maxHeight: 567,\n    maxWidth: 250,\n    marginLeft: \"42%\",\n  },\n  repositoriosTexto: {\n    fontSize: 21,\n    fontWeight: \"600\",\n    color: \"#45565F\",\n    marginTop: 20,\n  },\n  titulo: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"#fff\",\n    textAlign: \"center\",\n  },\n  repositorio: {\n    width: \"100%\",\n    height: 80,\n    backgroundColor: \"#FFF\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  repositorioNome: {\n    fontSize: 16,\n    color: \"#444\",\n    fontWeight: \"bold\",\n  },\n  repositorioData: {\n    fontSize: 14,\n    color: \"#999\",\n  },\n  botao: {\n    backgroundColor: \"#8A07DA\",\n    marginTop: 20,\n    marginBottom: 30,\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    width: \"90%\",\n  },\n  textoBotao: {\n    fontSize: 16,\n    color: \"#FFF\",\n  },\n});\n\nexport default estilos;\n","import api from \"../api\";\n\nexport async function pegarRepodoUser(id) {\n  try {\n    const resultado = await api.get(`/users/${id}/repos`);\n    return resultado.data;\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n}\nexport async function salvarRepodoUser(postId, nome, data, id) {\n  try {\n    await api.put(`/users/${id}/repos`, {\n      name: nome,\n      data: data,\n      postId: postId,\n      id: id,\n    });\n    return \"sucesso\";\n  } catch (err) {\n    console.log(err);\n    return \"erro\";\n  }\n}\n\nexport async function criarRepo(postId, nome, data) {\n  try {\n    await api.post(`/repos/`, {\n      name: nome,\n      data: data,\n      postId: postId,\n    });\n    return \"sucesso\";\n  } catch (err) {\n    console.log(err);\n    return \"erro\";\n  }\n}\nexport async function deletarRepo(id) {\n  try {\n    await api.delete(`/repos/${id}`);\n    return \"sucesso\";\n  } catch (err) {\n    console.log(err);\n    return \"erro\";\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-height: 567px;\n  max-width: 286px;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid black;\n  border-bottom: none;\n  margin-top: 50px;\n  align-items: center;\n`;\n\nexport const Layer = styled.img`\n  z-index: -1;\n  position: fixed;\n  right: 35%;\n`;\nexport const TopLayout = styled.img`\n  z-index: 4;\n  position: fixed;\n  right: 35%;\n`;\nexport const BotLayout = styled.img`\n  z-index: 4;\n  position: fixed;\n  top: 600px;\n  right: 35%;\n`;\nexport const WhiteBanner = styled.div`\n  width: 300px;\n  background-color: white;\n  z-index: 4;\n  height: 1000px;\n  position: fixed;\n  top: 663px;\n`;\n\nexport const BackButton = styled.button`\n  border: none;\n  background-color: white;\n  font-weight: bold;\n  :active {\n    transform: translateY(4px);\n  }\n`;\nexport const ButtonWarpper = styled.div`\n  margin-top: 60px;\n`;\nexport const Back = styled.img`\n  width: 24px;\n  height: 24px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Text, View, FlatList, ScrollView } from \"react-native\";\nimport estilos from \"./estilos\";\nimport { pegarRepodoUser } from \"../../services/requisicoes/repositorios\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { BotLayout, Layer, TopLayout, BackButton } from \"./styles\";\nimport topLayout from \"../../assets/images/layoutTop.png\";\nimport botLayout from \"../../assets/images/layoutBot.png\";\nimport layout from \"../../assets/images/layout.png\";\n\nexport default function Repositorios({ route, navigation }) {\n  const [repo, setRepo] = useState([]);\n  const estaNatela = useIsFocused();\n\n  useEffect(async () => {\n    const resultado = await pegarRepodoUser(route.params.id);\n    setRepo(resultado);\n  }, [estaNatela]);\n\n  return (\n    <View style={estilos.container}>\n      <TopLayout src={topLayout} />\n      <BotLayout src={botLayout} />\n      <Layer src={layout} />\n\n      <View style={{ marginTop: 60, alignItems: \"center\" }}>\n        <BackButton onClick={() => navigation.navigate(\"Principal\")}>\n          Voltar\n        </BackButton>\n        <Text style={estilos.repositoriosTexto}>\n          {repo.length} repositórios criados\n        </Text>\n\n        <FlatList\n          data={repo}\n          style={{ width: \"100%\" }}\n          keyExtractor={(repo) => repo.id}\n          renderItem={({ item }) => (\n            <View style={estilos.repositorio}>\n              <Text style={estilos.repositorioNome}>{item.name}</Text>\n              <Text style={estilos.repositorioData}>\n                Atualizado em {item.updated_at}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n    </View>\n  );\n}\n","import { StyleSheet } from 'react-native';\n\nconst estilos = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fafafa',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    botao: {\n        backgroundColor: '#8A07DA',\n        marginTop: 20,\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        width: '90%',\n    },\n    textoBotao: {\n        fontWeight: 'bold',\n        fontSize: 16,\n        color: '#fff',\n    },\n    entrada: {\n        borderWidth: 2,\n        borderColor: '#ddd',\n        paddingHorizontal: 20,\n        fontSize: 16,\n        color: '#444',\n        marginTop: 20,\n        borderRadius: 8,\n        height: 44,\n        width: '90%',\n    }\n});\n\nexport default estilos;","import React, { useState } from \"react\";\nimport { criarRepo } from \"../../services/requisicoes/repositorios\";\nimport { TextInputMask } from \"react-native-masked-text\";\nimport { Text, View, TouchableOpacity, TextInput, Alert } from \"react-native\";\nimport estilos from \"./estilos\";\n\nexport default function CriarRepositorio({ route, navigation }) {\n  const [nome, setNome] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  async function criar() {\n    const resultado = await criarRepo(route.params.id, nome, data);\n\n    if (resultado === \"sucesso\") {\n      Alert.alert(\"Repositorio Criado!\");\n      navigation.goBack();\n    } else {\n      Alert.alert(\"Erro ao criar repositorio\");\n    }\n  }\n\n  return (\n    <View style={estilos.container}>\n      <TextInput\n        placeholder=\"Nome do repositório\"\n        autoCapitalize=\"none\"\n        style={estilos.entrada}\n        value={nome}\n        onChangeText={setNome}\n      />\n      <TextInput\n        placeholder=\"Data de Criação\"\n        autoCapitalize=\"none\"\n        style={estilos.entrada}\n        value={data}\n        onChangeText={setData}\n      />\n      <TouchableOpacity style={estilos.botao} onPress={criar}>\n        <Text style={estilos.textoBotao}>Criar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import { StyleSheet } from 'react-native';\n\n\nconst estilos = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fafafa',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    botao: {\n        backgroundColor: '#8A07DA',\n        marginTop: 50,\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        width: '90%',\n    },\n    textoBotao: {\n        fontWeight: 'bold',\n        fontSize: 16,\n        color: '#fff',\n    },\n    entrada: {\n        borderWidth: 2,\n        borderColor: '#ddd',\n        paddingHorizontal: 20,\n        fontSize: 16,\n        color: '#444',\n        marginTop: 20,\n        borderRadius: 8,\n        height: 44,\n        width: '90%',\n    }\n});\n\nexport default estilos;","import React, { useState } from \"react\";\nimport { TextInputMask } from \"react-native-masked-text\";\nimport { Text, View, TouchableOpacity, TextInput, Alert } from \"react-native\";\nimport estilos from \"./estilos\";\nimport {\n  salvarRepodoUser,\n  deletarRepo,\n} from \"../../services/requisicoes/repositorios\";\n\nexport default function InfoRepositorio({ route, navigation }) {\n  const [nome, setNome] = useState(route.params.item.name);\n  const [data, setData] = useState(route.params.item.data);\n\n  async function salvar() {\n    const resultado = await salvarRepodoUser(\n      route.params.item.postId,\n      nome,\n      data,\n      route.params.item.id\n    );\n    if (resultado === \"sucesso\") {\n      Alert.alert(\"Repositorio atualizado!\");\n      navigation.goBack();\n    } else {\n      Alert.alert(\"Erro ao atualizar repositorio\");\n    }\n  }\n  async function deletar() {\n    const resultado = await deletarRepo(route.params.item.id);\n    if (resultado === \"sucesso\") {\n      Alert.alert(\"Repositorio Deletado!\");\n      navigation.goBack();\n    } else {\n      Alert.alert(\"Erro ao deletar repositorio\");\n    }\n  }\n\n  return (\n    <View style={estilos.container}>\n      <TextInput\n        placeholder=\"Nome do repositório\"\n        autoCapitalize=\"none\"\n        style={estilos.entrada}\n        value={nome}\n        onChangeText={setNome}\n      />\n      <TextInput\n        placeholder=\"Data de Criação\"\n        autoCapitalize=\"none\"\n        style={estilos.entrada}\n        value={data}\n        onChangeText={setData}\n      />\n      <TouchableOpacity onPress={salvar} style={estilos.botao}>\n        <Text style={estilos.textoBotao}>Salvar</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={deletar}\n        style={[estilos.botao, { backgroundColor: \"#DD2B2B\", marginTop: 10 }]}\n      >\n        <Text style={estilos.textoBotao}>Deletar</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View } from \"react-native\";\n\nconst Tab = createNativeStackNavigator();\n\nimport Principal from \"./paginas/Principal\";\nimport Repositorios from \"./paginas/Repositorios\";\nimport CriarRepositorio from \"./paginas/CriarRepositorio\";\nimport InfoRepositorio from \"./paginas/InfoRepositorio\";\n\nexport default function Rotas() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Principal\"\n          options={{ title: \"Perfil\" }}\n          component={Principal}\n          options={{\n            headerShown: false,\n          }}\n        />\n        <Tab.Screen\n          name=\"Repositorios\"\n          options={{\n            headerShown: false,\n          }}\n          component={Repositorios}\n        />\n        <Tab.Screen\n          name=\"CriarRepositorio\"\n          options={{ title: \"Criar Repositório\" }}\n          component={CriarRepositorio}\n        />\n        <Tab.Screen\n          name=\"InfoRepositorio\"\n          options={{ title: \"Repositório Info\" }}\n          component={InfoRepositorio}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\ndiv{\n  background-color:#ffff\n}`;\n","import React from \"react\";\nimport Rotas from \"./src/rotas\";\nimport Global from \"./src/styles/global\";\n\nexport default function App() {\n  return (\n    <>\n      <Rotas />\n      <Global />\n    </>\n  );\n}\n"],"sourceRoot":""}